use_poetry_env() {
  if [[ ! -f pyproject.toml ]]; then
    log_error 'No pyproject.toml found. Use `poetry new` or `poetry init` to create one first.'
    exit 2
  fi

  venv_path=$(poetry env info --path)
  venv_already_exists=$?
  if [ $venv_already_exists -ne 0 ]; then
    # create venv
    poetry run true
    venv_path=$(poetry env info --path)
  fi

  export VIRTUAL_ENV=$venv_path
  export POETRY_ACTIVE=1
  PATH_add "$VIRTUAL_ENV/bin"
}

use_venv_from_tool_versions() {
  local python_version=$(awk '/python/{print $2}' .tool-versions)
  local venv_name="${PWD##*/}-venv-${python_version}"
  local venv_location="$(direnv_layout_dir)/${venv_name}"
  local venv_bin_folder="${venv_location}/bin/"

  if [[ ! -d $venv_bin_folder ]]; then
    local python_location="$(asdf where python)/bin/python"
    $python_location -m venv $venv_location
  fi
  export VIRTUAL_ENV=$venv_location
  export PATH=$venv_bin_folder:$PATH
}
